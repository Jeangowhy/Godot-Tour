[gd_resource type="VisualShader" load_steps=8 format=2]

[ext_resource path="res://noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeExpression" id=2]
size = Vector2( 1096.18, 348.37 )
expression = "out = VERTEX.xzy + vec3(0, sin( TIME) + cos( TIME), 0)
"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_vtx_2;



void vertex() {
// Input:6
	vec3 n_out6p0 = VERTEX;

// VectorOp:7
	vec3 n_in7p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out7p0 = n_out6p0 * n_in7p1;

// Expression:5
	vec3 n_out5p0;
	n_out5p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out5p0 = VERTEX.xzy + vec3(0, sin( TIME) + cos( TIME), 0)
		
	}

// Texture:2
	vec4 tex_vtx_2_read = texture(tex_vtx_2, n_out5p0.xy);
	vec3 n_out2p0 = tex_vtx_2_read.rgb;
	float n_out2p1 = tex_vtx_2_read.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out8p0 = n_out2p0 * n_in8p1;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 + n_out8p0;

// Output:0
	VERTEX = n_out9p0;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -213.833, -33.6997 )
nodes/vertex/0/position = Vector2( 1900, 300 )
nodes/vertex/2/node = SubResource( 1 )
nodes/vertex/2/position = Vector2( 980, 120 )
nodes/vertex/5/node = SubResource( 2 )
nodes/vertex/5/position = Vector2( -240, 260 )
nodes/vertex/5/size = Vector2( 1096.18, 348.37 )
nodes/vertex/5/input_ports = ""
nodes/vertex/5/output_ports = "0,1,out;"
nodes/vertex/5/expression = "out = VERTEX.xzy + vec3(0, sin( TIME) + cos( TIME), 0)
"
nodes/vertex/6/node = SubResource( 3 )
nodes/vertex/6/position = Vector2( 980, -20 )
nodes/vertex/7/node = SubResource( 4 )
nodes/vertex/7/position = Vector2( 1340, -40 )
nodes/vertex/8/node = SubResource( 5 )
nodes/vertex/8/position = Vector2( 1340, 200 )
nodes/vertex/9/node = SubResource( 6 )
nodes/vertex/9/position = Vector2( 1740, -40 )
nodes/vertex/connections = PoolIntArray( 5, 0, 2, 0, 6, 0, 7, 0, 8, 0, 9, 1, 7, 0, 9, 0, 2, 0, 8, 0, 9, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 620, 0 )
nodes/light/0/position = Vector2( 340, 160 )
